name: CI

on:
  pull_request:
    branches:
      [main]

jobs:
  code-style:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Install dependencies
        run: |
          rm -rf ./composer.lock
          composer install
          
      - name: Run sniffer
        run: composer run:sniffer   

  tests:
    runs-on: ubuntu-latest
    if: always()
    strategy:
      fail-fast: false
      matrix:
        combination:
          - suite: unit
            port: 3308
          - suite: feature
            port: 3309
    services:
      mysql:
        image: mysql:8.0
        ports:
          - ${{ matrix.combination.port }}:3306
        env:
          MYSQL_DATABASE: gprs.db
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: xdebug
          tools: composer

      - name: Install dependencies
        run: |
          rm -rf ./composer.lock
          composer install

      - name: Run tests
        run: | 
          composer run:tests:${{ matrix.combination.suite }} | tee coverage.txt
          test ${PIPESTATUS[0]} -eq 0

        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ matrix.combination.port }}
          DB_DATABASE: gprs.db
          DB_USERNAME: root
          DB_PASSWORD: root
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ALGO: ${{ secrets.JWT_ALGO }}
      
      - name: Check percentage
        id: percentages
        run: |
          grep "^[[:space:]]*Lines:" ./coverage.txt > coverage_percent.txt
          coverage_value=$(grep -oP '(\d+\.\d+%)' ./coverage_percent.txt | sed 's/%//' | awk '{print int($1)}')
          coverage_value_float=$(grep -oP '(\d+\.\d+%)' ./coverage_percent.txt | sed 's/%//' | awk '{print $1 + 0}')

          if [[ "$coverage_value" -lt 80 ]]; then
            echo "Tests Failed because the coverage is $coverage_value% and this repository enforces 80% of coverage."
            echo "${{ matrix.combination.suite }}=$coverage_value_float" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "Tests ran successfully with $coverage_value% coverage"
            echo "${{ matrix.combination.suite }}=$coverage_value_float" >> $GITHUB_OUTPUT
          fi

    outputs:
      unit: ${{ steps.percentages.outputs.unit }}
      feature: ${{ steps.percentages.outputs.feature }}

  code-coverage-as-comment:
    runs-on: 'ubuntu-latest'
    if: always()
    needs: ["tests"]
    steps:
      - name: 'Post comment'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "### Tests coverages\n\n| **Test type** | **Percentage** |\n| ------------- | -------------- |\n| Unit          | ${{needs.tests.outputs.unit}}% |\n| Feature       | ${{needs.tests.outputs.feature}}% |"
            })
