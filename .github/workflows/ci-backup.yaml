name: 📦 Backup database

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: 🔑 Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} 
      
      - name: 🔐 Add server to known_hosts
        shell: bash
        run: |
          ssh-keyscan -p 2222 ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: 📂 Backup Database
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
        run: |
          # Connect to the server, ensure the 'backups' folder exists, and create a backup
          ssh -p 2222 -T $SSH_USER << 'EOF'
            
            # Set the backup directory path
            BACKUP_DIR='${{vars.HOME_FOLDER}}/backups'
            
            # Create the backups directory if it doesn't exist
            mkdir -p "$BACKUP_DIR"
            echo "Backup directory checked and created if missing: $BACKUP_DIR"

            # Generate the backup filename based on the current date and time
            TIMESTAMP=$(date +'%Y-%m-%d-%H-%M-%S')
            BACKUP_NAME="backup-$TIMESTAMP.sql"
            BACKUP_PATH="$BACKUP_DIR/$BACKUP_NAME"
            echo "Backup file will be named: $BACKUP_NAME"

            # Perform the database dump
            mysqldump -u "$DB_USERNAME" --password="$DB_PASSWORD" "$DB_DATABASE" > "$BACKUP_PATH"

            # Confirm completion and list the file
            if [ -f "$BACKUP_PATH" ]; then
              echo "Database backup completed successfully."
              echo "Backup saved at: $BACKUP_PATH"
              ls -lt "$BACKUP_DIR"
            else
              echo "Error: Backup failed to create."
              exit 1
            fi

          EOF

