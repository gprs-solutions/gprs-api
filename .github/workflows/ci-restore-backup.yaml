name: üì¶ Restore Database from Backup

on:
  workflow_dispatch:
    inputs:
      BACKUP_FILE:
        description: 'Name of the backup file to restore (e.g., backup-2024-10-01-00.sql)'
        required: true
        default: ''

jobs:
  restore:
    runs-on: ubuntu-latest
    steps:
      - name: üîë Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: üîê Add server to known_hosts
        shell: bash
        run: |
          ssh-keyscan -p 2222 ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: üóÇÔ∏è Check and Restore Database from Backup
        shell: bash
        run: |
          # Connect to the server and check if the backup file exists, then restore
          ssh -p 2222 ${{ secrets.SSH_USER }} " \
            BACKUP_DIR='${{vars.HOME_FOLDER}}/backups' && \
            BACKUP_PATH=\"\$BACKUP_DIR/${{ github.event.inputs.BACKUP_FILE }}\" && \
            echo \"Checking for backup file at: \$BACKUP_PATH\" && \
            ls -l \"\$BACKUP_DIR\" && \
            if [ ! -f \"\$BACKUP_PATH\" ]; then \
              echo 'Error: Specified backup file does not exist in \$BACKUP_DIR.' && exit 1; \
            fi && \
            echo 'Dropping all tables in database: ${{ secrets.DB_DATABASE }}' && \
            mysql -u${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_DATABASE }} -e \"SET FOREIGN_KEY_CHECKS = 0; \
            SET @tables = NULL; \
            SELECT GROUP_CONCAT('\`', table_name, '\`') INTO @tables \
            FROM information_schema.tables WHERE table_schema = '${{ secrets.DB_DATABASE }}'; \
            SET @drop_sql = CONCAT('DROP TABLE IF EXISTS ', @tables); \
            PREPARE stmt FROM @drop_sql; EXECUTE stmt; DEALLOCATE PREPARE stmt; \
            SET FOREIGN_KEY_CHECKS = 1;\" && \
            echo 'Restoring database from backup: ${{ github.event.inputs.BACKUP_FILE }}' && \
            mysql -u${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_DATABASE }} < \"\$BACKUP_PATH\" && \
            echo 'Database restored successfully from ${{ github.event.inputs.BACKUP_FILE }}.' \
          "